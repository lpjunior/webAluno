Error ao gerar o em: No Persistence provider for EntityManager named sublog-pu
Error ao gerar o em: No Persistence provider for EntityManager named sublog-pu
Error ao gerar o em: No Persistence provider for EntityManager named sublog-pu
Error ao gerar o em: No Persistence provider for EntityManager named sublog-pu
Error ao gerar o em: No Persistence provider for EntityManager named alunopu
Error ao gerar o em: No Persistence provider for EntityManager named alunopu
Error ao gerar o em: No Persistence provider for EntityManager named alunopu
Error ao gerar o em: No Persistence provider for EntityManager named alunopu
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: 7b496ddd-cbcb-476f-8e0c-8e14a06713ca (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: 7a0eb382-4704-48fd-9ace-c6169a2d3041 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: 9898a74e-dfd8-4793-b7c7-d1d4b40611df (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: a87cd6fd-d332-4d74-995d-90d1ae1b5a67 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: 46a44f4d-2f45-4c30-8c0b-812de6c539be (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: a076f2c5-760f-436e-8d73-eca43e493e19 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: c88c20bc-8ca4-4886-b2e1-440245e1c35d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: 2b032cbd-86d0-4f8f-976c-4d48c02c9cfd (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: da5a3fdf-9cfe-4941-b22e-8779d5380d54 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 7, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 8, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: 5d933659-d85f-4046-a708-b0da26bae374 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 9, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 10, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1e6308a9, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@231baf51]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ac20bb4]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
Visiting attribute path : email
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_ from alunos aluno0_ where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2a3194c6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@625d9132
Registering SessionFactory: fa41bc07-00aa-430e-a9b8-f66bbf544039 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 11, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: 6b910d81-396f-4310-9687-5b9a0d88a2c9 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 12, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 13, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#13, matricula=123456, nome=Luis, id=12, email=luispaulojr@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=13}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: e6bf374e-a5c9-40b1-87ba-9e18334cdc25 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 14, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 15, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#15, matricula=123456, nome=Luis, id=14, email=luispaulojr@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=15}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3297)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3824)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:345)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:25)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
SQL Error: 1062, SQLState: 23000
Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:25)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:25)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
rollback() called on an inactive transaction
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: 9769ff13-9703-4d61-afc9-47318879f940 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 16, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 17, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=17}
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#17, matricula=123456, nome=Luis, id=16, email=luispaulojr@gmail.com}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3297)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3824)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:345)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:25)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
SQL Error: 1062, SQLState: 23000
Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:25)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:25)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
rollback() called on an inactive transaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: feab9548-8364-4072-b68e-e07d5860426a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 18, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 19, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Connection pool now considered primed; min-size will be maintained
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: 832d4f94-30ba-4add-a87c-7c9a732aadd0 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 20, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 21, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: 932421da-9f1d-4746-8693-d7caf96b7fa2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: 7dfe0b27-65fa-4322-9a24-4c4f001f3d06 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: 808c52a6-e6da-48e3-9eaf-15f3ce1b7239 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d1e09bc, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ceb7b5e]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a08078c]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665522c2]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba26eb0]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d2828c9
Registering SessionFactory: da4ff253-ad7f-401b-9224-4c040fceec55 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
Error ao gerar o em: Cannot invoke "javax.persistence.EntityManager.getTransaction()" because "br.gov.rj.sublog.aluno.util.HibernateUtil.entityManager" is null
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [jbd-pu]
Excluding from consideration due to name mis-match
Found no matching persistence units
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78fa769e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@79defdc
Adding type registration yes_no -> org.hibernate.type.YesNoType@4b86805d
Adding type registration byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration character -> org.hibernate.type.CharacterType@3e62d773
Adding type registration char -> org.hibernate.type.CharacterType@3e62d773
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e62d773
Adding type registration short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration integer -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration int -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration long -> org.hibernate.type.LongType@747f281
Adding type registration long -> org.hibernate.type.LongType@747f281
Adding type registration java.lang.Long -> org.hibernate.type.LongType@747f281
Adding type registration float -> org.hibernate.type.FloatType@1ebea008
Adding type registration float -> org.hibernate.type.FloatType@1ebea008
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ebea008
Adding type registration double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b50df34
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b50df34
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e13529a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e13529a
Adding type registration string -> org.hibernate.type.StringType@e25951c
Adding type registration java.lang.String -> org.hibernate.type.StringType@e25951c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f666ebb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57a3e26a
Adding type registration url -> org.hibernate.type.UrlType@3eb91815
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3eb91815
Adding type registration Duration -> org.hibernate.type.DurationType@19b89d4
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@19b89d4
Adding type registration Instant -> org.hibernate.type.InstantType@3336e6b6
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3336e6b6
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48b67364
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48b67364
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@72ef8d15
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@72ef8d15
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3fce8fd9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3fce8fd9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37911f88
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37911f88
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3fa247d1
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3fa247d1
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4fa1c212
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4fa1c212
Adding type registration date -> org.hibernate.type.DateType@1130520d
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1130520d
Adding type registration time -> org.hibernate.type.TimeType@4dd6fd0a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4dd6fd0a
Adding type registration timestamp -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c012563
Adding type registration calendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f8a9499
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62833051
Adding type registration locale -> org.hibernate.type.LocaleType@37fb0bed
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fb0bed
Adding type registration currency -> org.hibernate.type.CurrencyType@28b46423
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28b46423
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1863d2fe
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1863d2fe
Adding type registration class -> org.hibernate.type.ClassType@26df6e3a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26df6e3a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d9caaeb
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d9caaeb
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6f6745d6
Adding type registration binary -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration byte[] -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration [B -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration row_version -> org.hibernate.type.RowVersionType@34f6515b
Adding type registration image -> org.hibernate.type.ImageType@14008db3
Adding type registration characters -> org.hibernate.type.CharArrayType@518caac3
Adding type registration char[] -> org.hibernate.type.CharArrayType@518caac3
Adding type registration [C -> org.hibernate.type.CharArrayType@518caac3
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration text -> org.hibernate.type.TextType@57ad2aa7
Adding type registration ntext -> org.hibernate.type.NTextType@7cb502c
Adding type registration blob -> org.hibernate.type.BlobType@7c51f34b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c51f34b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@125290e5
Adding type registration clob -> org.hibernate.type.ClobType@31920ade
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31920ade
Adding type registration nclob -> org.hibernate.type.NClobType@1fd14d74
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1fd14d74
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3eb81efb
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30c8681
Adding type registration serializable -> org.hibernate.type.SerializableType@df6620a
Adding type registration object -> org.hibernate.type.ObjectType@3e6f3f28
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e6f3f28
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3406472c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5717c37
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@20435c40] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@573906eb] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@479ceda0]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e4efc1b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@459f7aa3]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@27aae97b, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e4efc1b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@322803db]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4487c0c2]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38792286]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c251f90]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@625d9132] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@242b6e1a
Registering SessionFactory: 247fea41-e124-4740-9afc-457f7a76da4f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 22, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 23, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@77c233af] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@322803db]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/dbsublog]
Connection leak detected: there are 1 unclosed connections upon shutting down pool jdbc:mysql://localhost:3306/dbsublog
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78fa769e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@79defdc
Adding type registration yes_no -> org.hibernate.type.YesNoType@4b86805d
Adding type registration byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration character -> org.hibernate.type.CharacterType@3e62d773
Adding type registration char -> org.hibernate.type.CharacterType@3e62d773
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e62d773
Adding type registration short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration integer -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration int -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration long -> org.hibernate.type.LongType@747f281
Adding type registration long -> org.hibernate.type.LongType@747f281
Adding type registration java.lang.Long -> org.hibernate.type.LongType@747f281
Adding type registration float -> org.hibernate.type.FloatType@1ebea008
Adding type registration float -> org.hibernate.type.FloatType@1ebea008
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ebea008
Adding type registration double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b50df34
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b50df34
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e13529a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e13529a
Adding type registration string -> org.hibernate.type.StringType@e25951c
Adding type registration java.lang.String -> org.hibernate.type.StringType@e25951c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f666ebb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57a3e26a
Adding type registration url -> org.hibernate.type.UrlType@3eb91815
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3eb91815
Adding type registration Duration -> org.hibernate.type.DurationType@19b89d4
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@19b89d4
Adding type registration Instant -> org.hibernate.type.InstantType@3336e6b6
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3336e6b6
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48b67364
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48b67364
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@72ef8d15
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@72ef8d15
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3fce8fd9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3fce8fd9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37911f88
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37911f88
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3fa247d1
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3fa247d1
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4fa1c212
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4fa1c212
Adding type registration date -> org.hibernate.type.DateType@1130520d
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1130520d
Adding type registration time -> org.hibernate.type.TimeType@4dd6fd0a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4dd6fd0a
Adding type registration timestamp -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c012563
Adding type registration calendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f8a9499
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62833051
Adding type registration locale -> org.hibernate.type.LocaleType@37fb0bed
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fb0bed
Adding type registration currency -> org.hibernate.type.CurrencyType@28b46423
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28b46423
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1863d2fe
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1863d2fe
Adding type registration class -> org.hibernate.type.ClassType@26df6e3a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26df6e3a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d9caaeb
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d9caaeb
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6f6745d6
Adding type registration binary -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration byte[] -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration [B -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration row_version -> org.hibernate.type.RowVersionType@34f6515b
Adding type registration image -> org.hibernate.type.ImageType@14008db3
Adding type registration characters -> org.hibernate.type.CharArrayType@518caac3
Adding type registration char[] -> org.hibernate.type.CharArrayType@518caac3
Adding type registration [C -> org.hibernate.type.CharArrayType@518caac3
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration text -> org.hibernate.type.TextType@57ad2aa7
Adding type registration ntext -> org.hibernate.type.NTextType@7cb502c
Adding type registration blob -> org.hibernate.type.BlobType@7c51f34b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c51f34b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@125290e5
Adding type registration clob -> org.hibernate.type.ClobType@31920ade
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31920ade
Adding type registration nclob -> org.hibernate.type.NClobType@1fd14d74
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1fd14d74
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3eb81efb
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30c8681
Adding type registration serializable -> org.hibernate.type.SerializableType@df6620a
Adding type registration object -> org.hibernate.type.ObjectType@3e6f3f28
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e6f3f28
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3406472c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5717c37
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@20435c40] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@573906eb] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@479ceda0]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e4efc1b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@459f7aa3]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@27aae97b, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e4efc1b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@322803db]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4487c0c2]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38792286]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c251f90]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?

    
    alter table alunos 
       drop 
       foreign key FKlvsdinntjvt2xb5dx4hyrk5tc
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@352c44a8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    drop table if exists alunos

    
    drop table if exists enderecos

    
    drop table if exists hibernate_sequence

    
    create table alunos (
       id_aluno bigint not null,
        email varchar(150) not null,
        matricula varchar(255) not null,
        nome varchar(255) not null,
        telefone varchar(15) not null,
        endereco_id bigint,
        primary key (id_aluno)
    ) engine=InnoDB
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    create table enderecos (
       id bigint not null,
        bairro varchar(255),
        cidade varchar(255),
        estado varchar(255),
        logradouro varchar(255),
        primary key (id)
    ) engine=InnoDB

    
    create table hibernate_sequence (
       next_val bigint
    ) engine=InnoDB

    
    insert into hibernate_sequence values ( 1 )

    
    alter table alunos 
       add constraint UK_mbvpvjdhy6gsmbw6odlro3ub unique (email)

    
    alter table alunos 
       add constraint UK_28q7cqbm7sj0l004x4y0mok8d unique (matricula)

    
    alter table alunos 
       add constraint FKlvsdinntjvt2xb5dx4hyrk5tc 
       foreign key (endereco_id) 
       references enderecos (id)
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12e0f1cb
Registering SessionFactory: 48f39fcd-309b-49d8-b97e-822e892fb691 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6a2c717f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@322803db]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/dbsublog]
Connection leak detected: there are 1 unclosed connections upon shutting down pool jdbc:mysql://localhost:3306/dbsublog
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2eea88a1
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78fa769e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@79defdc
Adding type registration yes_no -> org.hibernate.type.YesNoType@4b86805d
Adding type registration byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17d919b6
Adding type registration character -> org.hibernate.type.CharacterType@3e62d773
Adding type registration char -> org.hibernate.type.CharacterType@3e62d773
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e62d773
Adding type registration short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@776a6d9b
Adding type registration integer -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration int -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c5ae43b
Adding type registration long -> org.hibernate.type.LongType@747f281
Adding type registration long -> org.hibernate.type.LongType@747f281
Adding type registration java.lang.Long -> org.hibernate.type.LongType@747f281
Adding type registration float -> org.hibernate.type.FloatType@1ebea008
Adding type registration float -> org.hibernate.type.FloatType@1ebea008
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ebea008
Adding type registration double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@35a3d49f
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b50df34
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b50df34
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e13529a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e13529a
Adding type registration string -> org.hibernate.type.StringType@e25951c
Adding type registration java.lang.String -> org.hibernate.type.StringType@e25951c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f666ebb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57a3e26a
Adding type registration url -> org.hibernate.type.UrlType@3eb91815
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3eb91815
Adding type registration Duration -> org.hibernate.type.DurationType@19b89d4
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@19b89d4
Adding type registration Instant -> org.hibernate.type.InstantType@3336e6b6
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3336e6b6
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48b67364
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48b67364
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@72ef8d15
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@72ef8d15
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3fce8fd9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3fce8fd9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37911f88
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37911f88
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3fa247d1
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3fa247d1
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4fa1c212
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4fa1c212
Adding type registration date -> org.hibernate.type.DateType@1130520d
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1130520d
Adding type registration time -> org.hibernate.type.TimeType@4dd6fd0a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4dd6fd0a
Adding type registration timestamp -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6736fa8d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c012563
Adding type registration calendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ef782af
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f8a9499
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62833051
Adding type registration locale -> org.hibernate.type.LocaleType@37fb0bed
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fb0bed
Adding type registration currency -> org.hibernate.type.CurrencyType@28b46423
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28b46423
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1863d2fe
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1863d2fe
Adding type registration class -> org.hibernate.type.ClassType@26df6e3a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26df6e3a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d9caaeb
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d9caaeb
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6f6745d6
Adding type registration binary -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration byte[] -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration [B -> org.hibernate.type.BinaryType@404bbcbd
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b9ed6da
Adding type registration row_version -> org.hibernate.type.RowVersionType@34f6515b
Adding type registration image -> org.hibernate.type.ImageType@14008db3
Adding type registration characters -> org.hibernate.type.CharArrayType@518caac3
Adding type registration char[] -> org.hibernate.type.CharArrayType@518caac3
Adding type registration [C -> org.hibernate.type.CharArrayType@518caac3
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14fa86ae
Adding type registration text -> org.hibernate.type.TextType@57ad2aa7
Adding type registration ntext -> org.hibernate.type.NTextType@7cb502c
Adding type registration blob -> org.hibernate.type.BlobType@7c51f34b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c51f34b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@125290e5
Adding type registration clob -> org.hibernate.type.ClobType@31920ade
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31920ade
Adding type registration nclob -> org.hibernate.type.NClobType@1fd14d74
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1fd14d74
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3eb81efb
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30c8681
Adding type registration serializable -> org.hibernate.type.SerializableType@df6620a
Adding type registration object -> org.hibernate.type.ObjectType@3e6f3f28
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e6f3f28
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3406472c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5717c37
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@20435c40] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@573906eb] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@479ceda0]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e4efc1b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@459f7aa3]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@27aae97b, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e4efc1b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@322803db]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4487c0c2]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38792286]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c251f90]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@625d9132] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@242b6e1a
Registering SessionFactory: 8976198f-6adb-4fa7-bd37-dbf033a79ebf (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#4, matricula=123456, nome=Luis, id=3, email=luispaulojr@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=4}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5f95f1e1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@322803db]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/dbsublog]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Error ao gerar o em: Cannot invoke "javax.persistence.EntityManagerFactory.createEntityManager()" because "br.gov.rj.sublog.aluno.util.HibernateUtil.emf" is null
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79defdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b86805d
Adding type registration yes_no -> org.hibernate.type.YesNoType@76b07f29
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration char -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration int -> org.hibernate.type.IntegerType@2e570ded
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@70e38ce1
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@163370c2
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration string -> org.hibernate.type.StringType@2f666ebb
Adding type registration java.lang.String -> org.hibernate.type.StringType@2f666ebb
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57a3e26a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6531a794
Adding type registration url -> org.hibernate.type.UrlType@27912e3
Adding type registration java.net.URL -> org.hibernate.type.UrlType@27912e3
Adding type registration Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration date -> org.hibernate.type.DateType@1b266842
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b266842
Adding type registration time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c012563
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e3c0e40
Adding type registration calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf48f6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@266374ef
Adding type registration locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e4d3ce5
Adding type registration binary -> org.hibernate.type.BinaryType@1bab8268
Adding type registration byte[] -> org.hibernate.type.BinaryType@1bab8268
Adding type registration [B -> org.hibernate.type.BinaryType@1bab8268
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration row_version -> org.hibernate.type.RowVersionType@14008db3
Adding type registration image -> org.hibernate.type.ImageType@6d7fc27
Adding type registration characters -> org.hibernate.type.CharArrayType@58594a11
Adding type registration char[] -> org.hibernate.type.CharArrayType@58594a11
Adding type registration [C -> org.hibernate.type.CharArrayType@58594a11
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration text -> org.hibernate.type.TextType@7cb502c
Adding type registration ntext -> org.hibernate.type.NTextType@12a94400
Adding type registration blob -> org.hibernate.type.BlobType@125290e5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@125290e5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67b9b51a
Adding type registration clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration nclob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30c8681
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f75a668
Adding type registration serializable -> org.hibernate.type.SerializableType@198d6542
Adding type registration object -> org.hibernate.type.ObjectType@3406472c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3406472c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b978d10
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b7a8434
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@571c5681] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68dc098b]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a2b17b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a56812e]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3bcd426c, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a2b17b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f14e5bf]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f85fe1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3062f9f4]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d32e9b]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@620c8641] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45acdd11
Registering SessionFactory: 763fdb63-9a57-4e0f-a077-bddd61f15d77 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Connection pool now considered primed; min-size will be maintained
Error ao gerar o em: Cannot invoke "javax.persistence.EntityManagerFactory.createEntityManager()" because "br.gov.rj.sublog.aluno.util.HibernateUtil.emf" is null
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79defdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b86805d
Adding type registration yes_no -> org.hibernate.type.YesNoType@76b07f29
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration char -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration int -> org.hibernate.type.IntegerType@2e570ded
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@70e38ce1
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@163370c2
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration string -> org.hibernate.type.StringType@2f666ebb
Adding type registration java.lang.String -> org.hibernate.type.StringType@2f666ebb
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57a3e26a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6531a794
Adding type registration url -> org.hibernate.type.UrlType@27912e3
Adding type registration java.net.URL -> org.hibernate.type.UrlType@27912e3
Adding type registration Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration date -> org.hibernate.type.DateType@1b266842
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b266842
Adding type registration time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c012563
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e3c0e40
Adding type registration calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf48f6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@266374ef
Adding type registration locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e4d3ce5
Adding type registration binary -> org.hibernate.type.BinaryType@1bab8268
Adding type registration byte[] -> org.hibernate.type.BinaryType@1bab8268
Adding type registration [B -> org.hibernate.type.BinaryType@1bab8268
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration row_version -> org.hibernate.type.RowVersionType@14008db3
Adding type registration image -> org.hibernate.type.ImageType@6d7fc27
Adding type registration characters -> org.hibernate.type.CharArrayType@58594a11
Adding type registration char[] -> org.hibernate.type.CharArrayType@58594a11
Adding type registration [C -> org.hibernate.type.CharArrayType@58594a11
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration text -> org.hibernate.type.TextType@7cb502c
Adding type registration ntext -> org.hibernate.type.NTextType@12a94400
Adding type registration blob -> org.hibernate.type.BlobType@125290e5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@125290e5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67b9b51a
Adding type registration clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration nclob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30c8681
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f75a668
Adding type registration serializable -> org.hibernate.type.SerializableType@198d6542
Adding type registration object -> org.hibernate.type.ObjectType@3406472c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3406472c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b978d10
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b7a8434
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@571c5681] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68dc098b]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a2b17b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a56812e]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3bcd426c, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a2b17b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f14e5bf]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f85fe1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3062f9f4]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d32e9b]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@620c8641] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45acdd11
Registering SessionFactory: e7b8b12a-bac9-46f7-baef-b5400b1738df (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16612a51
Adding type registration true_false -> org.hibernate.type.TrueFalseType@18317edc
Adding type registration yes_no -> org.hibernate.type.YesNoType@5852c06f
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration char -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21d03963
Adding type registration integer -> org.hibernate.type.IntegerType@264f218
Adding type registration int -> org.hibernate.type.IntegerType@264f218
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@264f218
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1169afe1
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@389b0789
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration string -> org.hibernate.type.StringType@15f47664
Adding type registration java.lang.String -> org.hibernate.type.StringType@15f47664
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19976a65
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75c56eb9
Adding type registration url -> org.hibernate.type.UrlType@56dc1551
Adding type registration java.net.URL -> org.hibernate.type.UrlType@56dc1551
Adding type registration Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52815fa3
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14a50707
Adding type registration calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d43661b
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1c852c0f
Adding type registration locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27508c5d
Adding type registration binary -> org.hibernate.type.BinaryType@1e81f160
Adding type registration byte[] -> org.hibernate.type.BinaryType@1e81f160
Adding type registration [B -> org.hibernate.type.BinaryType@1e81f160
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration row_version -> org.hibernate.type.RowVersionType@4b34fff9
Adding type registration image -> org.hibernate.type.ImageType@78a773fd
Adding type registration characters -> org.hibernate.type.CharArrayType@68034211
Adding type registration char[] -> org.hibernate.type.CharArrayType@68034211
Adding type registration [C -> org.hibernate.type.CharArrayType@68034211
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration text -> org.hibernate.type.TextType@5b3f61ff
Adding type registration ntext -> org.hibernate.type.NTextType@275bf9b3
Adding type registration blob -> org.hibernate.type.BlobType@5495333e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5495333e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fa34d52
Adding type registration clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration nclob -> org.hibernate.type.NClobType@563e4951
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@563e4951
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ae8bcbc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cdec700
Adding type registration serializable -> org.hibernate.type.SerializableType@4e31276e
Adding type registration object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5717c37
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@573906eb] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@479ceda0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cc586a8]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 4dcbac11-e8a5-41eb-923c-e92b7e3dd889 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#6, matricula=123456, nome=Luis, id=5, email=luispaulojr@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=6}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3297)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3824)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:345)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
SQL Error: 1062, SQLState: 23000
Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
rollback() called on an inactive transaction
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16612a51
Adding type registration true_false -> org.hibernate.type.TrueFalseType@18317edc
Adding type registration yes_no -> org.hibernate.type.YesNoType@5852c06f
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration char -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21d03963
Adding type registration integer -> org.hibernate.type.IntegerType@264f218
Adding type registration int -> org.hibernate.type.IntegerType@264f218
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@264f218
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1169afe1
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@389b0789
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration string -> org.hibernate.type.StringType@15f47664
Adding type registration java.lang.String -> org.hibernate.type.StringType@15f47664
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19976a65
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75c56eb9
Adding type registration url -> org.hibernate.type.UrlType@56dc1551
Adding type registration java.net.URL -> org.hibernate.type.UrlType@56dc1551
Adding type registration Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52815fa3
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14a50707
Adding type registration calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d43661b
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1c852c0f
Adding type registration locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27508c5d
Adding type registration binary -> org.hibernate.type.BinaryType@1e81f160
Adding type registration byte[] -> org.hibernate.type.BinaryType@1e81f160
Adding type registration [B -> org.hibernate.type.BinaryType@1e81f160
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration row_version -> org.hibernate.type.RowVersionType@4b34fff9
Adding type registration image -> org.hibernate.type.ImageType@78a773fd
Adding type registration characters -> org.hibernate.type.CharArrayType@68034211
Adding type registration char[] -> org.hibernate.type.CharArrayType@68034211
Adding type registration [C -> org.hibernate.type.CharArrayType@68034211
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration text -> org.hibernate.type.TextType@5b3f61ff
Adding type registration ntext -> org.hibernate.type.NTextType@275bf9b3
Adding type registration blob -> org.hibernate.type.BlobType@5495333e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5495333e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fa34d52
Adding type registration clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration nclob -> org.hibernate.type.NClobType@563e4951
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@563e4951
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ae8bcbc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cdec700
Adding type registration serializable -> org.hibernate.type.SerializableType@4e31276e
Adding type registration object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5717c37
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@573906eb] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@479ceda0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cc586a8]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 56dec602-21cd-4756-a157-b7f4723ec68a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 7, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 8, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Error ao gerar o em: Cannot invoke "javax.persistence.EntityManagerFactory.createEntityManager()" because "br.gov.rj.sublog.aluno.util.HibernateUtil.emf" is null
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79defdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b86805d
Adding type registration yes_no -> org.hibernate.type.YesNoType@76b07f29
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration char -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration int -> org.hibernate.type.IntegerType@2e570ded
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@70e38ce1
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@163370c2
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration string -> org.hibernate.type.StringType@2f666ebb
Adding type registration java.lang.String -> org.hibernate.type.StringType@2f666ebb
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57a3e26a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6531a794
Adding type registration url -> org.hibernate.type.UrlType@27912e3
Adding type registration java.net.URL -> org.hibernate.type.UrlType@27912e3
Adding type registration Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration date -> org.hibernate.type.DateType@1b266842
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b266842
Adding type registration time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c012563
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e3c0e40
Adding type registration calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf48f6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@266374ef
Adding type registration locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e4d3ce5
Adding type registration binary -> org.hibernate.type.BinaryType@1bab8268
Adding type registration byte[] -> org.hibernate.type.BinaryType@1bab8268
Adding type registration [B -> org.hibernate.type.BinaryType@1bab8268
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration row_version -> org.hibernate.type.RowVersionType@14008db3
Adding type registration image -> org.hibernate.type.ImageType@6d7fc27
Adding type registration characters -> org.hibernate.type.CharArrayType@58594a11
Adding type registration char[] -> org.hibernate.type.CharArrayType@58594a11
Adding type registration [C -> org.hibernate.type.CharArrayType@58594a11
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration text -> org.hibernate.type.TextType@7cb502c
Adding type registration ntext -> org.hibernate.type.NTextType@12a94400
Adding type registration blob -> org.hibernate.type.BlobType@125290e5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@125290e5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67b9b51a
Adding type registration clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration nclob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30c8681
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f75a668
Adding type registration serializable -> org.hibernate.type.SerializableType@198d6542
Adding type registration object -> org.hibernate.type.ObjectType@3406472c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3406472c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b978d10
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b7a8434
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@571c5681] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68dc098b]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a2b17b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a56812e]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3bcd426c, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a2b17b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f14e5bf]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f85fe1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3062f9f4]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d32e9b]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@620c8641] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45acdd11
Registering SessionFactory: 0d660d8a-9679-40a5-9c6a-8f51da96b403 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16612a51
Adding type registration true_false -> org.hibernate.type.TrueFalseType@18317edc
Adding type registration yes_no -> org.hibernate.type.YesNoType@5852c06f
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration char -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21d03963
Adding type registration integer -> org.hibernate.type.IntegerType@264f218
Adding type registration int -> org.hibernate.type.IntegerType@264f218
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@264f218
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1169afe1
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@389b0789
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration string -> org.hibernate.type.StringType@15f47664
Adding type registration java.lang.String -> org.hibernate.type.StringType@15f47664
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19976a65
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75c56eb9
Adding type registration url -> org.hibernate.type.UrlType@56dc1551
Adding type registration java.net.URL -> org.hibernate.type.UrlType@56dc1551
Adding type registration Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52815fa3
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14a50707
Adding type registration calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d43661b
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1c852c0f
Adding type registration locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27508c5d
Adding type registration binary -> org.hibernate.type.BinaryType@1e81f160
Adding type registration byte[] -> org.hibernate.type.BinaryType@1e81f160
Adding type registration [B -> org.hibernate.type.BinaryType@1e81f160
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration row_version -> org.hibernate.type.RowVersionType@4b34fff9
Adding type registration image -> org.hibernate.type.ImageType@78a773fd
Adding type registration characters -> org.hibernate.type.CharArrayType@68034211
Adding type registration char[] -> org.hibernate.type.CharArrayType@68034211
Adding type registration [C -> org.hibernate.type.CharArrayType@68034211
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration text -> org.hibernate.type.TextType@5b3f61ff
Adding type registration ntext -> org.hibernate.type.NTextType@275bf9b3
Adding type registration blob -> org.hibernate.type.BlobType@5495333e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5495333e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fa34d52
Adding type registration clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration nclob -> org.hibernate.type.NClobType@563e4951
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@563e4951
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ae8bcbc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cdec700
Adding type registration serializable -> org.hibernate.type.SerializableType@4e31276e
Adding type registration object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5717c37
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@573906eb] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@479ceda0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cc586a8]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: edd4ae95-e845-4f1a-93c6-943ee6d53232 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 9, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 10, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16612a51
Adding type registration true_false -> org.hibernate.type.TrueFalseType@18317edc
Adding type registration yes_no -> org.hibernate.type.YesNoType@5852c06f
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration char -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21d03963
Adding type registration integer -> org.hibernate.type.IntegerType@264f218
Adding type registration int -> org.hibernate.type.IntegerType@264f218
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@264f218
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1169afe1
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@389b0789
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration string -> org.hibernate.type.StringType@15f47664
Adding type registration java.lang.String -> org.hibernate.type.StringType@15f47664
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19976a65
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75c56eb9
Adding type registration url -> org.hibernate.type.UrlType@56dc1551
Adding type registration java.net.URL -> org.hibernate.type.UrlType@56dc1551
Adding type registration Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52815fa3
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14a50707
Adding type registration calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d43661b
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1c852c0f
Adding type registration locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27508c5d
Adding type registration binary -> org.hibernate.type.BinaryType@1e81f160
Adding type registration byte[] -> org.hibernate.type.BinaryType@1e81f160
Adding type registration [B -> org.hibernate.type.BinaryType@1e81f160
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration row_version -> org.hibernate.type.RowVersionType@4b34fff9
Adding type registration image -> org.hibernate.type.ImageType@78a773fd
Adding type registration characters -> org.hibernate.type.CharArrayType@68034211
Adding type registration char[] -> org.hibernate.type.CharArrayType@68034211
Adding type registration [C -> org.hibernate.type.CharArrayType@68034211
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration text -> org.hibernate.type.TextType@5b3f61ff
Adding type registration ntext -> org.hibernate.type.NTextType@275bf9b3
Adding type registration blob -> org.hibernate.type.BlobType@5495333e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5495333e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fa34d52
Adding type registration clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration nclob -> org.hibernate.type.NClobType@563e4951
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@563e4951
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ae8bcbc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cdec700
Adding type registration serializable -> org.hibernate.type.SerializableType@4e31276e
Adding type registration object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5717c37
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@573906eb] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@479ceda0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cc586a8]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: bb7b9af3-6d1b-4704-83a5-6eaf34db9374 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 11, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 12, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#12, matricula=123456, nome=Luis, id=11, email=luispaulojr@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=12}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3297)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3824)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:345)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
SQL Error: 1062, SQLState: 23000
Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
rollback() called on an inactive transaction
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ac296f6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16612a51
Adding type registration true_false -> org.hibernate.type.TrueFalseType@18317edc
Adding type registration yes_no -> org.hibernate.type.YesNoType@5852c06f
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@53f3bdbd
Adding type registration character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration char -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ef74c30
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration short -> org.hibernate.type.ShortType@21d03963
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21d03963
Adding type registration integer -> org.hibernate.type.IntegerType@264f218
Adding type registration int -> org.hibernate.type.IntegerType@264f218
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@264f218
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration long -> org.hibernate.type.LongType@1169afe1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1169afe1
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72d6b3ba
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration double -> org.hibernate.type.DoubleType@389b0789
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@389b0789
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b410b60
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ec9bd38
Adding type registration string -> org.hibernate.type.StringType@15f47664
Adding type registration java.lang.String -> org.hibernate.type.StringType@15f47664
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19976a65
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75c56eb9
Adding type registration url -> org.hibernate.type.UrlType@56dc1551
Adding type registration java.net.URL -> org.hibernate.type.UrlType@56dc1551
Adding type registration Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4bbf6d0e
Adding type registration Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c3fdb62
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@189cbd7c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6aa8e115
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@609bcfb6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f1c29b7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2cb2fc20
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ea2bc93
Adding type registration date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f77d0f9
Adding type registration time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bb9e6dc
Adding type registration timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52815fa3
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52815fa3
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14a50707
Adding type registration calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11d8ae8b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d43661b
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1c852c0f
Adding type registration locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a82c5f1
Adding type registration currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fc4780b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1787bc24
Adding type registration class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a3631f8
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42a15bdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27508c5d
Adding type registration binary -> org.hibernate.type.BinaryType@1e81f160
Adding type registration byte[] -> org.hibernate.type.BinaryType@1e81f160
Adding type registration [B -> org.hibernate.type.BinaryType@1e81f160
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c61a903
Adding type registration row_version -> org.hibernate.type.RowVersionType@4b34fff9
Adding type registration image -> org.hibernate.type.ImageType@78a773fd
Adding type registration characters -> org.hibernate.type.CharArrayType@68034211
Adding type registration char[] -> org.hibernate.type.CharArrayType@68034211
Adding type registration [C -> org.hibernate.type.CharArrayType@68034211
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e15fe2
Adding type registration text -> org.hibernate.type.TextType@5b3f61ff
Adding type registration ntext -> org.hibernate.type.NTextType@275bf9b3
Adding type registration blob -> org.hibernate.type.BlobType@5495333e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5495333e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fa34d52
Adding type registration clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d483de4
Adding type registration nclob -> org.hibernate.type.NClobType@563e4951
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@563e4951
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ae8bcbc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cdec700
Adding type registration serializable -> org.hibernate.type.SerializableType@4e31276e
Adding type registration object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e19ebf0
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5717c37
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@573906eb] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@479ceda0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cc586a8]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@459f7aa3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 5ed58fab-d13a-4517-9775-20744bfdeee5 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 13, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 14, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#14, matricula=123456, nome=Luis, id=13, email=luispaulojr@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=14}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3297)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3824)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:345)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:35)
SQL Error: 1062, SQLState: 23000
Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:35)
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:35)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
rollback() called on an inactive transaction
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: fd4efccb-298d-4f28-a12c-85f86e75f0d0 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 15, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 16, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=16}
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#16, matricula=123456, nome=Luis, id=15, email=luispaulojr@gmail.com}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3297)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3824)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:345)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:39)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
SQL Error: 1062, SQLState: 23000
Duplicate entry 'luispaulojr@gmail.com' for key 'UK_mbvpvjdhy6gsmbw6odlro3ub'
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:39)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:39)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:29)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
rollback() called on an inactive transaction
rollback() called on an inactive transaction
Error ao executar o persist: Error while committing the transaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 40aec0eb-26be-42d4-87a8-0a7ff50c9f09 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:726)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:38)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
rolling back
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Error ao executar o persist: org.hibernate.PersistentObjectException: detached entity passed to persist: br.gov.rj.sublog.aluno.entity.Aluno
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 2f6721a0-f5f6-4226-b6c3-0ee0b887d0dd (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 17, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 18, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=18}
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 1234-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#18, matricula=123456, nome=Luis, id=17, email=lpjr@gmail.com}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'UK_28q7cqbm7sj0l004x4y0mok8d'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3297)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3824)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:345)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:39)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
SQL Error: 1062, SQLState: 23000
Duplicate entry '123456' for key 'UK_28q7cqbm7sj0l004x4y0mok8d'
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:39)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at br.gov.rj.sublog.aluno.repository.AlunoRepository.manterAluno(AlunoRepository.java:39)
	at br.gov.rj.sublog.aluno.app.Principal.main(Principal.java:30)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
rollback() called on an inactive transaction
rollback() called on an inactive transaction
Error ao executar o persist: Error while committing the transaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 34a38298-eb47-41d8-b2f0-b54f56f1f441 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 19, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 20, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 4321-5678, endereco=br.gov.rj.sublog.aluno.entity.Endereco#20, matricula=654321, nome=Luis, id=19, email=lpjr@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=20}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: e6500b41-50c9-4513-95ca-c7f3d6727f10 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 21, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 22, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2323-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#22, matricula=135486, nome=Carla, id=21, email=carla@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=22}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 845b19de-cf9f-4fe4-9a6b-fabd85304b5c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 23, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 24, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=23}
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#23, matricula=235486, nome=Carla2, id=24, email=carla2@gmail.com}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 9d9b6444-144d-4a46-9978-cb3d81ae7790 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#24]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Result set row: 0
Result row: EntityKey[br.gov.rj.sublog.aluno.entity.Endereco#23], EntityKey[br.gov.rj.sublog.aluno.entity.Aluno#24]
Resolving attributes for [br.gov.rj.sublog.aluno.entity.Endereco#23]
Processing attribute `bairro` : value = Centro
Attribute (`bairro`)  - enhanced for lazy-loading? - false
Processing attribute `cidade` : value = Rio de Janeiro
Attribute (`cidade`)  - enhanced for lazy-loading? - false
Processing attribute `estado` : value = RJ
Attribute (`estado`)  - enhanced for lazy-loading? - false
Processing attribute `logradouro` : value = Rua 1
Attribute (`logradouro`)  - enhanced for lazy-loading? - false
Done materializing entity [br.gov.rj.sublog.aluno.entity.Endereco#23]
Resolving attributes for [br.gov.rj.sublog.aluno.entity.Aluno#24]
Processing attribute `email` : value = carla2@gmail.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `endereco` : value = 23
Attribute (`endereco`)  - enhanced for lazy-loading? - false
Processing attribute `matricula` : value = 235486
Attribute (`matricula`)  - enhanced for lazy-loading? - false
Processing attribute `nome` : value = Carla2
Attribute (`nome`)  - enhanced for lazy-loading? - false
Processing attribute `telefone` : value = (21) 2223-2254
Attribute (`telefone`)  - enhanced for lazy-loading? - false
Done materializing entity [br.gov.rj.sublog.aluno.entity.Aluno#24]
Done entity load

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 25, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 1 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=25}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=23}
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#25, matricula=235486, nome=Carla Pontes, id=24, email=carla2@gmail.com}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* update
        br.gov.rj.sublog.aluno.entity.Aluno */ update
            alunos 
        set
            email=?,
            endereco_id=?,
            matricula=?,
            nome=?,
            telefone=? 
        where
            id_aluno=?
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?

    
    alter table alunos 
       drop 
       foreign key FKlvsdinntjvt2xb5dx4hyrk5tc
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7aac8884] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    drop table if exists alunos

    
    drop table if exists enderecos

    
    drop table if exists hibernate_sequence

    
    create table alunos (
       id_aluno bigint not null,
        email varchar(150) not null,
        matricula varchar(255) not null,
        nome varchar(255) not null,
        telefone varchar(15) not null,
        endereco_id bigint,
        primary key (id_aluno)
    ) engine=InnoDB
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    create table enderecos (
       id bigint not null,
        bairro varchar(255),
        cidade varchar(255),
        estado varchar(255),
        logradouro varchar(255),
        primary key (id)
    ) engine=InnoDB

    
    create table hibernate_sequence (
       next_val bigint
    ) engine=InnoDB

    
    insert into hibernate_sequence values ( 1 )

    
    alter table alunos 
       add constraint UK_mbvpvjdhy6gsmbw6odlro3ub unique (email)

    
    alter table alunos 
       add constraint UK_28q7cqbm7sj0l004x4y0mok8d unique (matricula)

    
    alter table alunos 
       add constraint FKlvsdinntjvt2xb5dx4hyrk5tc 
       foreign key (endereco_id) 
       references enderecos (id)
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4a163575
Registering SessionFactory: 46837d56-3eb3-4f2e-9ef2-087c45deb775 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#1, matricula=235486, nome=Carla Pontes, id=2, email=carla2@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=1}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 57157a6b-a776-435d-b0ad-71f906260086 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Result set row: 0
Result row: EntityKey[br.gov.rj.sublog.aluno.entity.Endereco#1], EntityKey[br.gov.rj.sublog.aluno.entity.Aluno#2]
Resolving attributes for [br.gov.rj.sublog.aluno.entity.Endereco#1]
Processing attribute `bairro` : value = Centro
Attribute (`bairro`)  - enhanced for lazy-loading? - false
Processing attribute `cidade` : value = Rio de Janeiro
Attribute (`cidade`)  - enhanced for lazy-loading? - false
Processing attribute `estado` : value = RJ
Attribute (`estado`)  - enhanced for lazy-loading? - false
Processing attribute `logradouro` : value = Rua 1
Attribute (`logradouro`)  - enhanced for lazy-loading? - false
Done materializing entity [br.gov.rj.sublog.aluno.entity.Endereco#1]
Resolving attributes for [br.gov.rj.sublog.aluno.entity.Aluno#2]
Processing attribute `email` : value = carla2@gmail.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `endereco` : value = 1
Attribute (`endereco`)  - enhanced for lazy-loading? - false
Processing attribute `matricula` : value = 235486
Attribute (`matricula`)  - enhanced for lazy-loading? - false
Processing attribute `nome` : value = Carla Pontes
Attribute (`nome`)  - enhanced for lazy-loading? - false
Processing attribute `telefone` : value = (21) 2223-2254
Attribute (`telefone`)  - enhanced for lazy-loading? - false
Done materializing entity [br.gov.rj.sublog.aluno.entity.Aluno#2]
Done entity load
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#1, matricula=235486, nome=Carla Pontes, id=2, email=carla2@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=1}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: 16fd2e60-5ed1-4bbd-a902-7d3209ba952e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Result set row: 0
Result row: EntityKey[br.gov.rj.sublog.aluno.entity.Endereco#1], EntityKey[br.gov.rj.sublog.aluno.entity.Aluno#2]
Resolving attributes for [br.gov.rj.sublog.aluno.entity.Endereco#1]
Processing attribute `bairro` : value = Centro
Attribute (`bairro`)  - enhanced for lazy-loading? - false
Processing attribute `cidade` : value = Rio de Janeiro
Attribute (`cidade`)  - enhanced for lazy-loading? - false
Processing attribute `estado` : value = RJ
Attribute (`estado`)  - enhanced for lazy-loading? - false
Processing attribute `logradouro` : value = Rua 1
Attribute (`logradouro`)  - enhanced for lazy-loading? - false
Done materializing entity [br.gov.rj.sublog.aluno.entity.Endereco#1]
Resolving attributes for [br.gov.rj.sublog.aluno.entity.Aluno#2]
Processing attribute `email` : value = carla2@gmail.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `endereco` : value = 1
Attribute (`endereco`)  - enhanced for lazy-loading? - false
Processing attribute `matricula` : value = 235486
Attribute (`matricula`)  - enhanced for lazy-loading? - false
Processing attribute `nome` : value = Carla Pontes
Attribute (`nome`)  - enhanced for lazy-loading? - false
Processing attribute `telefone` : value = (21) 2223-2254
Attribute (`telefone`)  - enhanced for lazy-loading? - false
Done materializing entity [br.gov.rj.sublog.aluno.entity.Aluno#2]
Done entity load
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#1, matricula=235486, nome=Carla Pontes, id=2, email=carla.pg17@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=1}

    /* update
        br.gov.rj.sublog.aluno.entity.Aluno */ update
            alunos 
        set
            email=?,
            endereco_id=?,
            matricula=?,
            nome=?,
            telefone=? 
        where
            id_aluno=?
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: f3ef4d81-85b6-4b09-8817-d1237c490af2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Result set row: 0
Result row: EntityKey[br.gov.rj.sublog.aluno.entity.Endereco#1], EntityKey[br.gov.rj.sublog.aluno.entity.Aluno#2]
Resolving attributes for [br.gov.rj.sublog.aluno.entity.Endereco#1]
Processing attribute `bairro` : value = Centro
Attribute (`bairro`)  - enhanced for lazy-loading? - false
Processing attribute `cidade` : value = Rio de Janeiro
Attribute (`cidade`)  - enhanced for lazy-loading? - false
Processing attribute `estado` : value = RJ
Attribute (`estado`)  - enhanced for lazy-loading? - false
Processing attribute `logradouro` : value = Rua 1
Attribute (`logradouro`)  - enhanced for lazy-loading? - false
Done materializing entity [br.gov.rj.sublog.aluno.entity.Endereco#1]
Resolving attributes for [br.gov.rj.sublog.aluno.entity.Aluno#2]
Processing attribute `email` : value = carla.pg17@gmail.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `endereco` : value = 1
Attribute (`endereco`)  - enhanced for lazy-loading? - false
Processing attribute `matricula` : value = 235486
Attribute (`matricula`)  - enhanced for lazy-loading? - false
Processing attribute `nome` : value = Carla Pontes
Attribute (`nome`)  - enhanced for lazy-loading? - false
Processing attribute `telefone` : value = (21) 2223-2254
Attribute (`telefone`)  - enhanced for lazy-loading? - false
Done materializing entity [br.gov.rj.sublog.aluno.entity.Aluno#2]
Done entity load
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#1, matricula=235486, nome=Luis, id=2, email=luis@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=1}

    /* update
        br.gov.rj.sublog.aluno.entity.Aluno */ update
            alunos 
        set
            email=?,
            endereco_id=?,
            matricula=?,
            nome=?,
            telefone=? 
        where
            id_aluno=?
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?

    
    alter table alunos 
       drop 
       foreign key FKlvsdinntjvt2xb5dx4hyrk5tc
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7aac8884] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    drop table if exists alunos

    
    drop table if exists enderecos

    
    drop table if exists hibernate_sequence

    
    create table alunos (
       id_aluno bigint not null,
        email varchar(150) not null,
        matricula varchar(255) not null,
        nome varchar(255) not null,
        telefone varchar(15) not null,
        endereco_id bigint,
        primary key (id_aluno)
    ) engine=InnoDB
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    create table enderecos (
       id bigint not null,
        bairro varchar(255),
        cidade varchar(255),
        estado varchar(255),
        logradouro varchar(255),
        primary key (id)
    ) engine=InnoDB

    
    create table hibernate_sequence (
       next_val bigint
    ) engine=InnoDB

    
    insert into hibernate_sequence values ( 1 )

    
    alter table alunos 
       add constraint UK_mbvpvjdhy6gsmbw6odlro3ub unique (email)

    
    alter table alunos 
       add constraint UK_28q7cqbm7sj0l004x4y0mok8d unique (matricula)

    
    alter table alunos 
       add constraint FKlvsdinntjvt2xb5dx4hyrk5tc 
       foreign key (endereco_id) 
       references enderecos (id)
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4a163575
Registering SessionFactory: 4f11e59b-76ec-4bad-a92e-800e789d6938 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Done entity load
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Endereco: /* load br.gov.rj.sublog.aluno.entity.Endereco */ select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Endereco#1]

    /* load br.gov.rj.sublog.aluno.entity.Endereco */ select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cidade as cidade3_1_0_,
        endereco0_.estado as estado4_1_0_,
        endereco0_.logradouro as logradou5_1_0_ 
    from
        enderecos endereco0_ 
    where
        endereco0_.id=?
Done entity load

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#1, matricula=235486, nome=Luis, id=2, email=luis@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=1}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?

    
    alter table alunos 
       drop 
       foreign key FKlvsdinntjvt2xb5dx4hyrk5tc
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7aac8884] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    drop table if exists alunos

    
    drop table if exists enderecos

    
    drop table if exists hibernate_sequence

    
    create table alunos (
       id_aluno bigint not null,
        email varchar(150) not null,
        matricula varchar(255) not null,
        nome varchar(255) not null,
        telefone varchar(15) not null,
        endereco_id bigint,
        primary key (id_aluno)
    ) engine=InnoDB
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@277b8fa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    create table enderecos (
       id bigint not null,
        bairro varchar(255),
        cidade varchar(255),
        estado varchar(255),
        logradouro varchar(255),
        primary key (id)
    ) engine=InnoDB

    
    create table hibernate_sequence (
       next_val bigint
    ) engine=InnoDB

    
    insert into hibernate_sequence values ( 1 )

    
    alter table alunos 
       add constraint UK_mbvpvjdhy6gsmbw6odlro3ub unique (email)

    
    alter table alunos 
       add constraint UK_28q7cqbm7sj0l004x4y0mok8d unique (matricula)

    
    alter table alunos 
       add constraint FKlvsdinntjvt2xb5dx4hyrk5tc 
       foreign key (endereco_id) 
       references enderecos (id)
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4a163575
Registering SessionFactory: 0e84102a-18d5-4765-a061-d945e0e260f1 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Done entity load
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Endereco: /* load br.gov.rj.sublog.aluno.entity.Endereco */ select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Endereco#1]

    /* load br.gov.rj.sublog.aluno.entity.Endereco */ select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cidade as cidade3_1_0_,
        endereco0_.estado as estado4_1_0_,
        endereco0_.logradouro as logradou5_1_0_ 
    from
        enderecos endereco0_ 
    where
        endereco0_.id=?
Done entity load

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.connection.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44a2b17b]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c9e38, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7db534f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56ba8773]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f1ba8]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d4860f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51841ac6]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77774571] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39a87e72
Registering SessionFactory: d8c1f1a7-86fe-48b5-bcd9-e30395ac99f0 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Done entity load
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Endereco: /* load br.gov.rj.sublog.aluno.entity.Endereco */ select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Endereco#1]

    /* load br.gov.rj.sublog.aluno.entity.Endereco */ select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cidade as cidade3_1_0_,
        endereco0_.estado as estado4_1_0_,
        endereco0_.logradouro as logradou5_1_0_ 
    from
        enderecos endereco0_ 
    where
        endereco0_.id=?
Done entity load

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.connection.driver_class: com.mysql.cj.jdbc.Driver
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.connection.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22f59fa
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c78324b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@238d68ff
Adding type registration yes_no -> org.hibernate.type.YesNoType@9cb8225
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d61eb55
Adding type registration character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration char -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638ef7ed
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18ece7f4
Adding type registration integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration int -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35b74c5c
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration long -> org.hibernate.type.LongType@4808bc9b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4808bc9b
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration float -> org.hibernate.type.FloatType@7de62196
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7de62196
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration double -> org.hibernate.type.DoubleType@478db956
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@478db956
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19b843ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b0d80ed
Adding type registration string -> org.hibernate.type.StringType@dc9876b
Adding type registration java.lang.String -> org.hibernate.type.StringType@dc9876b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b2c5e02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc9b0f5
Adding type registration url -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f6c5d8
Adding type registration Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@791d1f8b
Adding type registration Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6950ed69
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42e25b0b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51a9ad5e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@560348e6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f284218
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@723e88f9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f627d13
Adding type registration date -> org.hibernate.type.DateType@895e367
Adding type registration java.sql.Date -> org.hibernate.type.DateType@895e367
Adding type registration time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6692b6c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cb346ea
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bd31064
Adding type registration calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59e2d8e3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fba3fc4
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d99c6b5
Adding type registration locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c693d
Adding type registration currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48c76607
Adding type registration timezone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55c53a33
Adding type registration class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f14a7d4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27e47833
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b5189ac
Adding type registration binary -> org.hibernate.type.BinaryType@6986852
Adding type registration byte[] -> org.hibernate.type.BinaryType@6986852
Adding type registration [B -> org.hibernate.type.BinaryType@6986852
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@421e361
Adding type registration row_version -> org.hibernate.type.RowVersionType@127a7a2e
Adding type registration image -> org.hibernate.type.ImageType@16aa8654
Adding type registration characters -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration char[] -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration [C -> org.hibernate.type.CharArrayType@6c372fe6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1722011b
Adding type registration text -> org.hibernate.type.TextType@398dada8
Adding type registration ntext -> org.hibernate.type.NTextType@4fbe37eb
Adding type registration blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61eaec38
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@616ac46a
Adding type registration clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28d18df5
Adding type registration nclob -> org.hibernate.type.NClobType@2b175c00
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b175c00
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d3d101b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78aa1f72
Adding type registration serializable -> org.hibernate.type.SerializableType@27d5a580
Adding type registration object -> org.hibernate.type.ObjectType@7357a011
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7357a011
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b978d10
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d07a63d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4816c290] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4940809c]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6075b2d3, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4816c290] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@b9dfc5a]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ceba99]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70cccd8f]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecdbab8]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6dfa915a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18b8d173
Registering SessionFactory: 67d4c5b4-a0d6-44dd-8aff-0170bcf84661 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Done entity load
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Endereco: /* load br.gov.rj.sublog.aluno.entity.Endereco */ select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Endereco#1]

    /* load br.gov.rj.sublog.aluno.entity.Endereco */ select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cidade as cidade3_1_0_,
        endereco0_.estado as estado4_1_0_,
        endereco0_.logradouro as logradou5_1_0_ 
    from
        enderecos endereco0_ 
    where
        endereco0_.id=?
Done entity load

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 9, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 10, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#9, matricula=235486, nome=Luis, id=10, email=luis@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=9}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.connection.driver_class: com.mysql.cj.jdbc.Driver
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.connection.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79defdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b86805d
Adding type registration yes_no -> org.hibernate.type.YesNoType@76b07f29
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration char -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration int -> org.hibernate.type.IntegerType@2e570ded
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@70e38ce1
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@163370c2
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration string -> org.hibernate.type.StringType@2f666ebb
Adding type registration java.lang.String -> org.hibernate.type.StringType@2f666ebb
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57a3e26a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6531a794
Adding type registration url -> org.hibernate.type.UrlType@27912e3
Adding type registration java.net.URL -> org.hibernate.type.UrlType@27912e3
Adding type registration Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration date -> org.hibernate.type.DateType@1b266842
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b266842
Adding type registration time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c012563
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e3c0e40
Adding type registration calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf48f6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@266374ef
Adding type registration locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e4d3ce5
Adding type registration binary -> org.hibernate.type.BinaryType@1bab8268
Adding type registration byte[] -> org.hibernate.type.BinaryType@1bab8268
Adding type registration [B -> org.hibernate.type.BinaryType@1bab8268
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration row_version -> org.hibernate.type.RowVersionType@14008db3
Adding type registration image -> org.hibernate.type.ImageType@6d7fc27
Adding type registration characters -> org.hibernate.type.CharArrayType@58594a11
Adding type registration char[] -> org.hibernate.type.CharArrayType@58594a11
Adding type registration [C -> org.hibernate.type.CharArrayType@58594a11
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration text -> org.hibernate.type.TextType@7cb502c
Adding type registration ntext -> org.hibernate.type.NTextType@12a94400
Adding type registration blob -> org.hibernate.type.BlobType@125290e5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@125290e5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67b9b51a
Adding type registration clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration nclob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30c8681
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f75a668
Adding type registration serializable -> org.hibernate.type.SerializableType@198d6542
Adding type registration object -> org.hibernate.type.ObjectType@3406472c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3406472c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b978d10
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b7a8434
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@571c5681] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68dc098b]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4940809c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16423501]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@33abde31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4940809c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2787de58]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295bf2a]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f172d4a]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd4a6fa]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?

    
    alter table alunos 
       drop 
       foreign key FKlvsdinntjvt2xb5dx4hyrk5tc
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@421056e5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    drop table if exists alunos

    
    drop table if exists enderecos

    
    drop table if exists hibernate_sequence

    
    create table alunos (
       id_aluno bigint not null,
        email varchar(150) not null,
        matricula varchar(255) not null,
        nome varchar(255) not null,
        telefone varchar(15) not null,
        endereco_id bigint,
        primary key (id_aluno)
    ) engine=InnoDB
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@cb7fa71] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    create table enderecos (
       id bigint not null,
        bairro varchar(255),
        cidade varchar(255),
        estado varchar(255),
        logradouro varchar(255),
        primary key (id)
    ) engine=InnoDB

    
    create table hibernate_sequence (
       next_val bigint
    ) engine=InnoDB

    
    insert into hibernate_sequence values ( 1 )

    
    alter table alunos 
       add constraint UK_mbvpvjdhy6gsmbw6odlro3ub unique (email)

    
    alter table alunos 
       add constraint UK_28q7cqbm7sj0l004x4y0mok8d unique (matricula)

    
    alter table alunos 
       add constraint FKlvsdinntjvt2xb5dx4hyrk5tc 
       foreign key (endereco_id) 
       references enderecos (id)
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@599e4d41
Registering SessionFactory: f450f956-d6c1-4f93-ba84-83c3c2b0f949 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Done entity load
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Endereco: /* load br.gov.rj.sublog.aluno.entity.Endereco */ select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Endereco#1]

    /* load br.gov.rj.sublog.aluno.entity.Endereco */ select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cidade as cidade3_1_0_,
        endereco0_.estado as estado4_1_0_,
        endereco0_.logradouro as logradou5_1_0_ 
    from
        enderecos endereco0_ 
    where
        endereco0_.id=?
Done entity load

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#1, matricula=235486, nome=Luis, id=2, email=luis@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=1}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.connection.driver_class: com.mysql.cj.jdbc.Driver
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.connection.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79defdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b86805d
Adding type registration yes_no -> org.hibernate.type.YesNoType@76b07f29
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration char -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration int -> org.hibernate.type.IntegerType@2e570ded
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@70e38ce1
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@163370c2
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration string -> org.hibernate.type.StringType@2f666ebb
Adding type registration java.lang.String -> org.hibernate.type.StringType@2f666ebb
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57a3e26a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6531a794
Adding type registration url -> org.hibernate.type.UrlType@27912e3
Adding type registration java.net.URL -> org.hibernate.type.UrlType@27912e3
Adding type registration Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration date -> org.hibernate.type.DateType@1b266842
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b266842
Adding type registration time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c012563
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e3c0e40
Adding type registration calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf48f6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@266374ef
Adding type registration locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e4d3ce5
Adding type registration binary -> org.hibernate.type.BinaryType@1bab8268
Adding type registration byte[] -> org.hibernate.type.BinaryType@1bab8268
Adding type registration [B -> org.hibernate.type.BinaryType@1bab8268
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration row_version -> org.hibernate.type.RowVersionType@14008db3
Adding type registration image -> org.hibernate.type.ImageType@6d7fc27
Adding type registration characters -> org.hibernate.type.CharArrayType@58594a11
Adding type registration char[] -> org.hibernate.type.CharArrayType@58594a11
Adding type registration [C -> org.hibernate.type.CharArrayType@58594a11
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration text -> org.hibernate.type.TextType@7cb502c
Adding type registration ntext -> org.hibernate.type.NTextType@12a94400
Adding type registration blob -> org.hibernate.type.BlobType@125290e5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@125290e5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67b9b51a
Adding type registration clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration nclob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30c8681
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f75a668
Adding type registration serializable -> org.hibernate.type.SerializableType@198d6542
Adding type registration object -> org.hibernate.type.ObjectType@3406472c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3406472c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b978d10
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b7a8434
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@571c5681] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68dc098b]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4940809c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16423501]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@33abde31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4940809c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2787de58]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295bf2a]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f172d4a]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd4a6fa]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?

    
    alter table alunos 
       drop 
       foreign key FKlvsdinntjvt2xb5dx4hyrk5tc
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@421056e5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    drop table if exists alunos

    
    drop table if exists enderecos

    
    drop table if exists hibernate_sequence

    
    create table alunos (
       id_aluno bigint not null,
        email varchar(150) not null,
        matricula varchar(255) not null,
        nome varchar(255) not null,
        telefone varchar(15) not null,
        endereco_id bigint,
        primary key (id_aluno)
    ) engine=InnoDB
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@cb7fa71] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.

    
    create table enderecos (
       id bigint not null,
        bairro varchar(255),
        cidade varchar(255),
        estado varchar(255),
        logradouro varchar(255),
        primary key (id)
    ) engine=InnoDB

    
    create table hibernate_sequence (
       next_val bigint
    ) engine=InnoDB

    
    insert into hibernate_sequence values ( 1 )

    
    alter table alunos 
       add constraint UK_mbvpvjdhy6gsmbw6odlro3ub unique (email)

    
    alter table alunos 
       add constraint UK_28q7cqbm7sj0l004x4y0mok8d unique (matricula)

    
    alter table alunos 
       add constraint FKlvsdinntjvt2xb5dx4hyrk5tc 
       foreign key (endereco_id) 
       references enderecos (id)
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@599e4d41
Registering SessionFactory: 62592aae-d0f8-4c39-afe0-342984adea5d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        aluno0_.id_aluno as id_aluno1_0_0_,
        aluno0_.email as email2_0_0_,
        aluno0_.endereco_id as endereco6_0_0_,
        aluno0_.matricula as matricul3_0_0_,
        aluno0_.nome as nome4_0_0_,
        aluno0_.telefone as telefone5_0_0_,
        endereco1_.id as id1_1_1_,
        endereco1_.bairro as bairro2_1_1_,
        endereco1_.cidade as cidade3_1_1_,
        endereco1_.estado as estado4_1_1_,
        endereco1_.logradouro as logradou5_1_1_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Done entity load : br.gov.rj.sublog.aluno.entity.Aluno#2
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.connection.driver_class: com.mysql.cj.jdbc.Driver
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.connection.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79defdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b86805d
Adding type registration yes_no -> org.hibernate.type.YesNoType@76b07f29
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration char -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration int -> org.hibernate.type.IntegerType@2e570ded
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@70e38ce1
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@163370c2
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration string -> org.hibernate.type.StringType@2f666ebb
Adding type registration java.lang.String -> org.hibernate.type.StringType@2f666ebb
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57a3e26a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6531a794
Adding type registration url -> org.hibernate.type.UrlType@27912e3
Adding type registration java.net.URL -> org.hibernate.type.UrlType@27912e3
Adding type registration Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration date -> org.hibernate.type.DateType@1b266842
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b266842
Adding type registration time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c012563
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e3c0e40
Adding type registration calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf48f6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@266374ef
Adding type registration locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e4d3ce5
Adding type registration binary -> org.hibernate.type.BinaryType@1bab8268
Adding type registration byte[] -> org.hibernate.type.BinaryType@1bab8268
Adding type registration [B -> org.hibernate.type.BinaryType@1bab8268
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration row_version -> org.hibernate.type.RowVersionType@14008db3
Adding type registration image -> org.hibernate.type.ImageType@6d7fc27
Adding type registration characters -> org.hibernate.type.CharArrayType@58594a11
Adding type registration char[] -> org.hibernate.type.CharArrayType@58594a11
Adding type registration [C -> org.hibernate.type.CharArrayType@58594a11
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration text -> org.hibernate.type.TextType@7cb502c
Adding type registration ntext -> org.hibernate.type.NTextType@12a94400
Adding type registration blob -> org.hibernate.type.BlobType@125290e5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@125290e5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67b9b51a
Adding type registration clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration nclob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30c8681
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f75a668
Adding type registration serializable -> org.hibernate.type.SerializableType@198d6542
Adding type registration object -> org.hibernate.type.ObjectType@3406472c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3406472c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b978d10
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b7a8434
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@571c5681] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68dc098b]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4940809c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16423501]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@33abde31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4940809c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2787de58]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295bf2a]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f172d4a]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd4a6fa]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@78054f54] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73844119
Registering SessionFactory: 8447ee3e-c517-4f81-8bc7-e9618adbdbd9 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        aluno0_.id_aluno as id_aluno1_0_0_,
        aluno0_.email as email2_0_0_,
        aluno0_.endereco_id as endereco6_0_0_,
        aluno0_.matricula as matricul3_0_0_,
        aluno0_.nome as nome4_0_0_,
        aluno0_.telefone as telefone5_0_0_,
        endereco1_.id as id1_1_1_,
        endereco1_.bairro as bairro2_1_1_,
        endereco1_.cidade as cidade3_1_1_,
        endereco1_.estado as estado4_1_1_,
        endereco1_.logradouro as logradou5_1_1_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Done entity load : br.gov.rj.sublog.aluno.entity.Aluno#2
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.connection.driver_class: com.mysql.cj.jdbc.Driver
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.connection.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fa769e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79defdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b86805d
Adding type registration yes_no -> org.hibernate.type.YesNoType@76b07f29
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@222a59e6
Adding type registration character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration char -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bff7da0
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cce57c7
Adding type registration integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration int -> org.hibernate.type.IntegerType@2e570ded
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e570ded
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration long -> org.hibernate.type.LongType@70e38ce1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@70e38ce1
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration float -> org.hibernate.type.FloatType@163370c2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@163370c2
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ca18a14
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64ec96c6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f8e8894
Adding type registration string -> org.hibernate.type.StringType@2f666ebb
Adding type registration java.lang.String -> org.hibernate.type.StringType@2f666ebb
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57a3e26a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6531a794
Adding type registration url -> org.hibernate.type.UrlType@27912e3
Adding type registration java.net.URL -> org.hibernate.type.UrlType@27912e3
Adding type registration Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2415fc55
Adding type registration Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6dd7b5a3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@39b43d60
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f20155b
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1df8b5b8
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@407a7f2a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f0fd5a0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e928fbf
Adding type registration date -> org.hibernate.type.DateType@1b266842
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b266842
Adding type registration time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd629b3
Adding type registration timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c012563
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c012563
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e3c0e40
Adding type registration calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b72cb8a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf48f6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@266374ef
Adding type registration locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a57ae10
Adding type registration currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43599640
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53b7f657
Adding type registration class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52e7a6b2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f6745d6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e4d3ce5
Adding type registration binary -> org.hibernate.type.BinaryType@1bab8268
Adding type registration byte[] -> org.hibernate.type.BinaryType@1bab8268
Adding type registration [B -> org.hibernate.type.BinaryType@1bab8268
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d4cd39
Adding type registration row_version -> org.hibernate.type.RowVersionType@14008db3
Adding type registration image -> org.hibernate.type.ImageType@6d7fc27
Adding type registration characters -> org.hibernate.type.CharArrayType@58594a11
Adding type registration char[] -> org.hibernate.type.CharArrayType@58594a11
Adding type registration [C -> org.hibernate.type.CharArrayType@58594a11
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57ad2aa7
Adding type registration text -> org.hibernate.type.TextType@7cb502c
Adding type registration ntext -> org.hibernate.type.NTextType@12a94400
Adding type registration blob -> org.hibernate.type.BlobType@125290e5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@125290e5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67b9b51a
Adding type registration clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@934b6cb
Adding type registration nclob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3eb81efb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30c8681
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f75a668
Adding type registration serializable -> org.hibernate.type.SerializableType@198d6542
Adding type registration object -> org.hibernate.type.ObjectType@3406472c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3406472c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d9314d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b978d10
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b7a8434
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@571c5681] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488d1cd7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68dc098b]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4940809c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16423501]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Aluno
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@33abde31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4940809c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2787de58]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295bf2a]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f172d4a]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd4a6fa]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@78054f54] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73844119
Registering SessionFactory: f3ef5c6c-386e-431d-ac7d-7bac4376753e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Aluno: /* load br.gov.rj.sublog.aluno.entity.Aluno */ select aluno0_.id_aluno as id_aluno1_0_1_, aluno0_.email as email2_0_1_, aluno0_.endereco_id as endereco6_0_1_, aluno0_.matricula as matricul3_0_1_, aluno0_.nome as nome4_0_1_, aluno0_.telefone as telefone5_0_1_, endereco1_.id as id1_1_0_, endereco1_.bairro as bairro2_1_0_, endereco1_.cidade as cidade3_1_0_, endereco1_.estado as estado4_1_0_, endereco1_.logradouro as logradou5_1_0_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Aluno#2]

    /* load br.gov.rj.sublog.aluno.entity.Aluno */ select
        aluno0_.id_aluno as id_aluno1_0_1_,
        aluno0_.email as email2_0_1_,
        aluno0_.endereco_id as endereco6_0_1_,
        aluno0_.matricula as matricul3_0_1_,
        aluno0_.nome as nome4_0_1_,
        aluno0_.telefone as telefone5_0_1_,
        endereco1_.id as id1_1_0_,
        endereco1_.bairro as bairro2_1_0_,
        endereco1_.cidade as cidade3_1_0_,
        endereco1_.estado as estado4_1_0_,
        endereco1_.logradouro as logradou5_1_0_ 
    from
        alunos aluno0_ 
    left outer join
        enderecos endereco1_ 
            on aluno0_.endereco_id=endereco1_.id 
    where
        aluno0_.id_aluno=?
Done entity load
Static select for action ACTION_MERGE on entity br.gov.rj.sublog.aluno.entity.Endereco: /* load br.gov.rj.sublog.aluno.entity.Endereco */ select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Loading entity: [br.gov.rj.sublog.aluno.entity.Endereco#1]

    /* load br.gov.rj.sublog.aluno.entity.Endereco */ select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cidade as cidade3_1_0_,
        endereco0_.estado as estado4_1_0_,
        endereco0_.logradouro as logradou5_1_0_ 
    from
        enderecos endereco0_ 
    where
        endereco0_.id=?
Done entity load

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator

    select
        next_val as id_val 
    from
        hibernate_sequence for update
            

    update
        hibernate_sequence 
    set
        next_val= ? 
    where
        next_val=?
Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
br.gov.rj.sublog.aluno.entity.Aluno{telefone=(21) 2223-2254, endereco=br.gov.rj.sublog.aluno.entity.Endereco#1, matricula=235486, nome=Luis, id=2, email=luis@gmail.com}
br.gov.rj.sublog.aluno.entity.Endereco{cidade=Rio de Janeiro, estado=RJ, bairro=Centro, logradouro=Rua 1, id=1}

    /* insert br.gov.rj.sublog.aluno.entity.Endereco
        */ insert 
        into
            enderecos
            (bairro, cidade, estado, logradouro, id) 
        values
            (?, ?, ?, ?, ?)

    /* insert br.gov.rj.sublog.aluno.entity.Aluno
        */ insert 
        into
            alunos
            (email, endereco_id, matricula, nome, telefone, id_aluno) 
        values
            (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
