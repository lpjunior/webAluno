Error ao gerar o em: No Persistence provider for EntityManager named sublog-pu
Error ao gerar o em: No Persistence provider for EntityManager named sublog-pu
Error ao gerar o em: No Persistence provider for EntityManager named sublog-pu
Error ao gerar o em: No Persistence provider for EntityManager named sublog-pu
Error ao gerar o em: No Persistence provider for EntityManager named alunopu
Error ao gerar o em: No Persistence provider for EntityManager named alunopu
Error ao gerar o em: No Persistence provider for EntityManager named alunopu
Error ao gerar o em: No Persistence provider for EntityManager named alunopu
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=alunopu, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [alunopu]
Persistence-unit [alunopu] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: alunopu
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/eclipse/webapp/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.jdbc.time_zone: UTC
		hibernate.jdbc.wrap_result_sets: false
		hibernate.use_sql_comments: true
		hibernate.hibernate.cache.use_query_cache: true
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/dbsublog
		hibernate.format_sql: true
		org.hibernate.SQL: debug
		org.hibernate.type: trace
		javax.persistence.jdbc.Driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.29.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd7a283
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e041a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e0ae11f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4149c063
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration byte -> org.hibernate.type.ByteType@34129c78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34129c78
Adding type registration character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration char -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7283d3eb
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration short -> org.hibernate.type.ShortType@1f760b47
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f760b47
Adding type registration integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration int -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3576ddc2
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration long -> org.hibernate.type.LongType@2ca26d77
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca26d77
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1787f2a0
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13d9cbf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2462cb01
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@452e19ca
Adding type registration string -> org.hibernate.type.StringType@471a9022
Adding type registration java.lang.String -> org.hibernate.type.StringType@471a9022
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a1f72f5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc222e
Adding type registration url -> org.hibernate.type.UrlType@102cec62
Adding type registration java.net.URL -> org.hibernate.type.UrlType@102cec62
Adding type registration Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30b6ffe0
Adding type registration Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@205d38da
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bf3a5d8
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e21e98f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d94beb9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d6025c5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f4c4b1a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3116c353
Adding type registration date -> org.hibernate.type.DateType@463fd068
Adding type registration java.sql.Date -> org.hibernate.type.DateType@463fd068
Adding type registration time -> org.hibernate.type.TimeType@5456afaa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5456afaa
Adding type registration timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50313382
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50313382
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d518b32
Adding type registration calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@479cbee5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12299890
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a37aefe
Adding type registration locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b7fdc8
Adding type registration currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b79fd76
Adding type registration timezone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@544d57e
Adding type registration class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b58b9e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a59da3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f704591
Adding type registration binary -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration [B -> org.hibernate.type.BinaryType@1acaf3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@658c5a19
Adding type registration row_version -> org.hibernate.type.RowVersionType@1187c9e8
Adding type registration image -> org.hibernate.type.ImageType@57c03d88
Adding type registration characters -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration char[] -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration [C -> org.hibernate.type.CharArrayType@4f74980d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f1b17f
Adding type registration text -> org.hibernate.type.TextType@3e2059ae
Adding type registration ntext -> org.hibernate.type.NTextType@1b8a29df
Adding type registration blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a225dd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57576994
Adding type registration clob -> org.hibernate.type.ClobType@4032d386
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4032d386
Adding type registration nclob -> org.hibernate.type.NClobType@4066c471
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4066c471
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cdba6dc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d026701
Adding type registration serializable -> org.hibernate.type.SerializableType@1a72a540
Adding type registration object -> org.hibernate.type.ObjectType@2474f125
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2474f125
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68f4865
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4816278d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eaf3684
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40317ba2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c01cfa1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@727eb8cb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39d9314d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@479ceda0] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d07a63d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@571c5681]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
No driver class specified
HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/dbsublog]
HHH10001001: Connection properties: {password=, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 5.5.29-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.23 (Revision: 18bbd5e68195d0da083cbd5bd0d05d76320df7cd)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7db534f2]
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Endereco
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name enderecos
Bind entity br.gov.rj.sublog.aluno.entity.Endereco on table enderecos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=bairro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property bairro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:bairro]
building SimpleValue for bairro
Building property bairro
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=cidade, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property cidade with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:cidade]
building SimpleValue for cidade
Building property cidade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=estado, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property estado with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:estado]
building SimpleValue for estado
Building property estado
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enderecos), mappingColumn=logradouro, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logradouro with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Endereco:logradouro]
building SimpleValue for logradouro
Building property logradouro
Binding entity from annotated class: br.gov.rj.sublog.aluno.entity.Aluno
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name alunos
Bind entity br.gov.rj.sublog.aluno.entity.Aluno on table alunos
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=id_aluno, insertable=true, updatable=true, unique=false}
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_aluno)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:email]
building SimpleValue for email
Building property email
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=endereco, insertable=true, updatable=true, unique=false}
Building property endereco
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=matricula, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property matricula with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:matricula]
building SimpleValue for matricula
Building property matricula
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=nome, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nome with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:nome]
building SimpleValue for nome
Building property nome
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(alunos), mappingColumn=telefone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property telefone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [br.gov.rj.sublog.aluno.entity.Aluno:telefone]
building SimpleValue for telefone
Building property telefone
Starting fillSimpleValue for id
Starting fillSimpleValue for bairro
Starting fillSimpleValue for cidade
Starting fillSimpleValue for estado
Starting fillSimpleValue for logradouro
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for matricula
Starting fillSimpleValue for nome
Starting fillSimpleValue for telefone
Forcing column [id] to be non-null as it is part of the primary key for table [enderecos]
Forcing column [id_aluno] to be non-null as it is part of the primary key for table [alunos]
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Resolving reference to class: br.gov.rj.sublog.aluno.entity.Endereco
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: enabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\workspace\eclipse\webapp\target\classes;C:\Users\luisp\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\luisp\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\luisp\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\luisp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\luisp\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\luisp\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\luisp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\luisp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\luisp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\luisp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\luisp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\luisp\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\luisp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\luisp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\luisp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\luisp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\luisp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\luisp\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\luisp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\luisp\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\luisp\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\luisp\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.1.Final\hibernate-validator-7.0.1.Final.jar;C:\Users\luisp\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.0\jakarta.validation-api-3.0.0.jar;C:\Users\luisp\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\luisp\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/dbsublog, javax.persistence.jdbc.user=****, user.country.format=US, hibernate.jdbc.time_zone=UTC, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.1\bin, sun.java.command=br.gov.rj.sublog.aluno.app.Principal, hibernate.use_sql_comments=true, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\luisp, javax.persistence.jdbc.Driver=com.mysql.cj.jdbc.Driver, user.language=pt, java.specification.vendor=Oracle Corporation, hibernate.hibernate.cache.use_query_cache=true, java.version.date=2020-10-20, java.home=C:\Program Files\Java\jdk-15.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.jdbc.wrap_result_sets=false, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=luisp, path.separator=;, hibernate.connection.username=****, org.hibernate.type=trace, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/dbsublog, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=alunopu, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\luisp\AppData\Local\Temp\, org.hibernate.SQL=debug, java.version=15.0.1, user.dir=C:\workspace\eclipse\webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6ef81f31, java.library.path=C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/DEVELOP/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\DEVELOP\SERVIDORES\php8;C:\composer;C:\Oracle\Middleware\Oracle_Home\instantclient_12_2;C:\Program Files\Git\cmd;C:\Users\luisp\AppData\Local\Microsoft\WindowsApps;C:\Users\luisp\AppData\Roaming\npm;C:\Program Files\Azure Data Studio\bin;C:\Users\luisp\AppData\Roaming\Composer\vendor\bin;C:\DEVELOP\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=59.0}
Unable to acquire Bean Validation ValidatorFactory, skipping activation
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cc586a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47f08b81]
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Endereco] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Endereco
Not known whether passed class name [br.gov.rj.sublog.aluno.entity.Aluno] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.gov.rj.sublog.aluno.entity.Aluno
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Endereco
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Endereco */ select id from enderecos where id =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Endereco */ select endereco_.id, endereco_.bairro as bairro2_1_, endereco_.cidade as cidade3_1_, endereco_.estado as estado4_1_, endereco_.logradouro as logradou5_1_ from enderecos endereco_ where endereco_.id=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Endereco */ insert into enderecos (bairro, cidade, estado, logradouro, id) values (?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Endereco */ update enderecos set bairro=?, cidade=?, estado=?, logradouro=? where id=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Endereco */ delete from enderecos where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760245e1]
Visiting attribute path : bairro
Visiting attribute path : cidade
Visiting attribute path : estado
Visiting attribute path : logradouro
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Endereco)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
          - SQL table alias mapping - endereco0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity br.gov.rj.sublog.aluno.entity.Endereco [NONE]: select endereco0_.id as id1_1_0_, endereco0_.bairro as bairro2_1_0_, endereco0_.cidade as cidade3_1_0_, endereco0_.estado as estado4_1_0_, endereco0_.logradouro as logradou5_1_0_ from enderecos endereco0_ where endereco0_.id=?
Static SQL for entity: br.gov.rj.sublog.aluno.entity.Aluno
 Version select: /* get version br.gov.rj.sublog.aluno.entity.Aluno */ select id_aluno from alunos where id_aluno =?
 Snapshot select: /* get current state br.gov.rj.sublog.aluno.entity.Aluno */ select aluno_.id_aluno, aluno_.email as email2_0_, aluno_.endereco_id as endereco6_0_, aluno_.matricula as matricul3_0_, aluno_.nome as nome4_0_, aluno_.telefone as telefone5_0_ from alunos aluno_ where aluno_.id_aluno=?
 Insert 0: /* insert br.gov.rj.sublog.aluno.entity.Aluno */ insert into alunos (email, endereco_id, matricula, nome, telefone, id_aluno) values (?, ?, ?, ?, ?, ?)
 Update 0: /* update br.gov.rj.sublog.aluno.entity.Aluno */ update alunos set email=?, endereco_id=?, matricula=?, nome=?, telefone=? where id_aluno=?
 Delete 0: /* delete br.gov.rj.sublog.aluno.entity.Aluno */ delete from alunos where id_aluno=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fe9da7]
Visiting attribute path : email
Visiting attribute path : endereco
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ede9c7]
Visiting attribute path : endereco.bairro
Visiting attribute path : endereco.cidade
Visiting attribute path : endereco.estado
Visiting attribute path : endereco.logradouro
Visiting attribute path : matricula
Visiting attribute path : nome
Visiting attribute path : telefone
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=br.gov.rj.sublog.aluno.entity.Aluno)
    - Returns
       - EntityReturnImpl(entity=br.gov.rj.sublog.aluno.entity.Aluno, querySpaceUid=<gen:0>, path=br.gov.rj.sublog.aluno.entity.Aluno)
          - EntityAttributeFetchImpl(entity=br.gov.rj.sublog.aluno.entity.Endereco, querySpaceUid=<gen:1>, path=br.gov.rj.sublog.aluno.entity.Aluno.endereco)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.gov.rj.sublog.aluno.entity.Aluno)
          - SQL table alias mapping - aluno0_
          - alias suffix - 0_
          - suffixed key columns - {id_aluno1_0_0_}
          - JOIN (JoinDefinedByMetadata(endereco)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=br.gov.rj.sublog.aluno.entity.Endereco)
                - SQL table alias mapping - endereco1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for entity br.gov.rj.sublog.aluno.entity.Aluno [NONE]: select aluno0_.id_aluno as id_aluno1_0_0_, aluno0_.email as email2_0_0_, aluno0_.endereco_id as endereco6_0_0_, aluno0_.matricula as matricul3_0_0_, aluno0_.nome as nome4_0_0_, aluno0_.telefone as telefone5_0_0_, endereco1_.id as id1_1_1_, endereco1_.bairro as bairro2_1_1_, endereco1_.cidade as cidade3_1_1_, endereco1_.estado as estado4_1_1_, endereco1_.logradouro as logradou5_1_1_ from alunos aluno0_ left outer join enderecos endereco1_ on aluno0_.endereco_id=endereco1_.id where aluno0_.id_aluno=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e57e5d6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : alunos
No alter strings for table : enderecos
No alter strings for table : hibernate_sequence
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350d3f4d
Registering SessionFactory: 7b496ddd-cbcb-476f-8e0c-8e14a06713ca (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
